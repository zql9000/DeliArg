@inject NavigationManager navigationmanager

<h3 class="head">Menu</h3>
<ul>
    <li>
        <FluentAnchor Href="Orders" Appearance=@SetAppearance("Order")>Orders</FluentAnchor>
    </li>
    <li>
        <FluentAnchor Href="ShipmentReceipts" Appearance=@SetAppearance("ShipmentReceipt")>Shipment Receipts</FluentAnchor>
    </li>
    <li>
        <FluentAnchor Href="StoreStocks" Appearance=@SetAppearance("StoreStock")>Store Stocks</FluentAnchor>
    </li>
    <li>
        <FluentAnchor Href="Products" Appearance=@SetAppearance("Product")>Products</FluentAnchor>
    </li>
    <li>
        <FluentAnchor Href="Suppliers" Appearance=@SetAppearance("Supplier")>Suppliers</FluentAnchor>
    </li>
    <li>
        <FluentAnchor Href="Warehouses" Appearance=@SetAppearance("Warehouse")>Warehouses</FluentAnchor>
    </li>
    <li>
        <FluentAnchor Href="Stores" Appearance=@SetAppearance("Store")>Stores</FluentAnchor>
    </li>
    <li>
        <FluentAnchor Href="OrderStatuses" Appearance=@SetAppearance("OrderStatus")>Order Statuses</FluentAnchor>
    </li>
    <li>
        <FluentAnchor Href="ShipmentReceiptStatuses" Appearance=@SetAppearance("ShipmentReceiptStatus")>Shipment Receipt Statuses</FluentAnchor>
    </li>
</ul>

@code {
    private string? target;

    protected override void OnInitialized()
    {
        navigationmanager.LocationChanged += LocationChanged;
        base.OnInitialized();
    }

    private void LocationChanged(object? sender, LocationChangedEventArgs e)
    {
        Uri uri = new Uri(e.Location);
        if (uri.Segments.Count() > 1)
            target = uri.Segments[1];
        else
            target = "";
        StateHasChanged();
    }

    private Appearance SetAppearance(string location) => (target ?? string.Empty).StartsWith(location) ? Appearance.Neutral : Appearance.Stealth;

}
